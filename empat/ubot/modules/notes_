import asyncio
import re
from gc import get_objects

from pykeyboard import InlineKeyboard
from pyrogram import *
from pyrogram.types import *

from ubot import *
from ubot.config import *
from ubot.utils import *

__MODULE__ = "Notes"
__HELP__ = """
Bantuan Untuk Notes


• Perintah: <code>{0}save</code> [nama catatan] [balas pesan]
• Penjelasan: Untuk menyimpan catatan.

• Perintah: <code>{0}get</code> [nama catatan]
• Penjelasan: Untuk mengambil catatan.

• Perintah: <code>{0}rm</code> [nama catatan]
• Penjelasan: Untuk menghapus catatan.

• Perintah: <code>{0}notes</code>
• Penjelasan: Untuk melihat semua catatan.


• Note: Untuk menggunakan button, Gunakan Format :
<code>Mbah google [google|google.com]</code>
"""


@KY.UBOT("save")
async def addnote_cmd(client, message):
    emo = Emo(client.me.id)
    await emo.initialize()
    note_name = get_arg(message)
    reply = message.reply_to_message
    xx = await message.reply(f"{emo.proses} **Processing...**")
    await asyncio.sleep(0.5)
    if not reply:
        return await xx.edit(
            f"{emo.gagal} <b>Gunakan format :</b> <code>save</code> [nama catatan] [balas ke pesan]."
        )
    if await get_note(client.me.id, note_name):
        return await xx.edit(
            f"{emo.gagal} <b>Catatan <code>{note_name}</code> sudah ada.</b>"
        )
    bjir = await reply.forward(client.me.id)
    copy = bjir.id
    await save_note(client.me.id, note_name, copy)
    await xx.edit(
        f"{emo.sukses} <b>Catatan <code>{note_name}</code> berhasil disimpan.</b>"
    )


@KY.UBOT("get")
async def get_cmd(client, message):
    emo = Emo(client.me.id)
    await emo.initialize()
    note_name = get_arg(message)
    xx = await message.reply(f"{emo.proses} **Processing...**")
    await asyncio.sleep(0.5)
    if not note_name:
        return await xx.edit(
            f"{emo.gagal} <b>Gunakan format :</b> <code>get</code> [nama catatan]."
        )
    note = await get_note(client.me.id, note_name)
    if not note:
        return await xx.edit(
            f"{emo.gagal} <b>Catatan dengan nama <code>{note_name}</code> tidak ditemukan.</b>"
        )
    msg_o = await client.get_messages(client.me.id, note)
    note_id = await client.get_messages(client.me.id, note)
    if note_id.text:
        if "|" in note_id.text:
            try:
                x = await client.get_inline_bot_results(
                    bot.me.username, f"get_notes {id(message)}"
                )
                await client.send_inline_bot_result(
                    message.chat.id,
                    x.query_id,
                    x.results[0].id,
                    reply_to_message_id=message.id,
                )
            except Exception as error:
                return await message.reply(error)
        else:
            await msg_o.copy(message.chat.id, reply_to_message_id=message.id)
    else:
        await msg_o.copy(message.chat.id, reply_to_message_id=message.id)
    await xx.delete()


async def notes_create_button(text):
    buttons = InlineKeyboard(row_width=2)
    keyboard = []
    for button_text in re.findall(r"\[(.*?)\]", text):
        button_label, button_url = button_text.split("|")
        keyboard.append(InlineKeyboardButton(button_label, url=button_url))
    buttons.add(*keyboard)
    text_button = re.sub(r"\[(.*?)\]", "", text)
    return buttons, text_button


@KY.INLINE("^get_notes")
async def get_notes_button(client, inline_query):
    _id = int(inline_query.query.split()[1])
    m = [obj for obj in get_objects() if id(obj) == _id][0]
    get_note_id = await get_note(m._client.me.id, m.text.split()[1])
    note_id = await m._client.get_messages(m._client.me.id, get_note_id)
    keyboard, text_button = await notes_create_button(note_id.text)
    await client.answer_inline_query(
        inline_query.id,
        cache_time=0,
        results=[
            (
                InlineQueryResultArticle(
                    title="get notes!",
                    reply_markup=keyboard,
                    input_message_content=InputTextMessageContent(text_button),
                )
            )
        ],
    )


@KY.UBOT("rm")
async def delnote_cmd(client, message):
    emo = Emo(client.me.id)
    await emo.initialize()
    note_name = get_arg(message)
    xx = await message.reply(f"{emo.proses} **Processing...**")
    await asyncio.sleep(0.5)
    if not note_name:
        return await xx.edit(
            f"{emo.gagal} <b>Gunakan format :</b> <code>rm</code> [nama catatan]"
        )
    note = await get_note(client.me.id, note_name)
    if not note:
        return await xx.edit(
            f"{emo.gagal} <b>Catatan dengan nama <code>{note_name}</code> tidak ditemukan.</b>"
        )
    await rm_note(client.me.id, note_name)
    await xx.edit(
        f"{emo.sukses} <b>Catatan <code>{note_name}</code> berhasil dihapus.</b>"
    )
    await client.delete_messages(client.me.id, [int(note), int(note) + 1])


@KY.UBOT("notes")
async def notes_cmd(client, message):
    emo = Emo(client.me.id)
    await emo.initialize()
    xx = await message.reply(f"{emo.proses} **Processing...**")
    await asyncio.sleep(1)
    msg = f"{emo.sukses} <b>๏ Daftar Catatan :</b>\n\n"
    semua = await all_notes(client.me.id)
    if not semua:
        return await xx.edit(f"{emo.gagal} **Tidak ada catatan tersimpan .**")
    else:
        for notes in semua:
            msg += f"{emo.sukses} <code>{notes}</code>\n"
        await message.reply(msg)
